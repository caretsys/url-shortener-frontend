{"version":3,"sources":["components/URLInput.js","components/Result.js","helpers/fetchFiles.js","App.js","index.js"],"names":["URLInput","onSubmit","isLoading","Form","useForm","form","layout","onFinish","style","width","Item","rules","required","message","type","id","name","placeholder","htmlType","loading","icon","RightSquareOutlined","Result","link","modal","renderHTML","footer","onCancel","setIsModalVisible","visible","isModalVisible","title","SmileOutlined","subTitle","past","present","extra","onClick","window","open","fetchLink","url","a","axios","get","params","short_url","data","App","useState","setIsLoading","setLink","response","className","banner","showIcon","ReactDOM","render","document","getElementById"],"mappings":"4QAqCeA,EAlCE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAAgB,EAC7BC,IAAKC,UAAbC,EADqC,oBAE5C,OACE,eAAC,IAAD,CACEC,OAAO,SACPC,SAAUN,EACVI,KAAMA,EACNG,MAAO,CAAEC,MAAO,QAJlB,UAME,cAAC,IAAKC,KAAN,CACEC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAEC,KAAM,MAAOD,QAAS,yBAE1BE,GAAG,aACHC,KAAK,MACLR,MAAO,CAAEC,MAAO,OAPlB,SASE,cAAC,IAAD,CAAOQ,YAAY,uDAErB,cAAC,IAAKP,KAAN,CAAWF,MAAO,CAAEC,MAAO,OAA3B,SACE,cAAC,IAAD,CACEK,KAAK,UACLI,SAAS,SACTC,QAASjB,EACTkB,KAAM,cAACC,EAAA,EAAD,IAJR,8B,2BCGOC,MAxBf,YAAkC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAOhBC,EACJ,cAAC,IAAD,CAAOC,OAAQ,KAAMC,SAPF,WACnBH,EAAMI,mBAAkB,IAMqBC,QAASL,EAAMM,eAA5D,SACE,cAAC,IAAD,CACEC,MAAM,gBACNX,KAAM,cAACY,EAAA,EAAD,IACNC,SAAQ,UAAKV,EAAKW,KAAV,mCAAyCX,EAAKY,SACtDC,MAAO,CACL,cAAC,IAAD,CAAQtB,KAAK,UAA0BuB,QAV9B,WACfC,OAAOC,KAAKhB,EAAKY,QAAS,WASpB,uBAA2B,kBAOnC,OAAOZ,EAAOE,EAAa,M,kCCtBhBe,EAAS,uCAAG,WAAgBC,GAAhB,iBAAAC,EAAA,4DACN,mCADM,SAIbC,IAAMC,IAHC,mCAGa,CAAEC,OAAQ,CAAEJ,SAJnB,uBAGbK,EAHa,EAGrBC,KAAQD,UAHa,kBAKhBA,GALgB,2CAAH,sDCiCPE,MA1Bf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACN/C,EADM,KACKgD,EADL,OAE+BD,oBAAS,GAFxC,mBAENnB,EAFM,KAEUF,EAFV,OAGWqB,mBAAS,IAHpB,mBAGN1B,EAHM,KAGA4B,EAHA,KAIPlD,EAAQ,uCAAG,+BAAAyC,EAAA,6DAASD,EAAT,EAASA,IACxBS,GAAa,GADE,SAEQV,EAAUC,GAFlB,OAETW,EAFS,OAGfD,EAAQ,2BAAK5B,GAAN,IAAYW,KAAMO,EAAKN,QAASiB,KACvCF,GAAa,GACbtB,GAAkB,GALH,2CAAH,sDAOd,OACE,sBAAKyB,UAAU,MAAf,UACE,cAAC,IAAD,CACEC,QAAM,EACNzC,QAAQ,0DACRC,KAAK,OACLyC,UAAQ,IAEV,cAAC,EAAD,CAAUtD,SAAUA,EAAUC,UAAWA,IACzC,cAAC,EAAD,CAAQqB,KAAMA,EAAMC,MAAO,CAAEM,iBAAgBF,uBAC7C,0BC1BN4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6ffb9f8a.chunk.js","sourcesContent":["import { Input, Form, Button } from 'antd'\r\nimport { RightSquareOutlined } from '@ant-design/icons'\r\n\r\nconst URLInput = ({ onSubmit, isLoading }) => {\r\n  const [form] = Form.useForm()\r\n  return (\r\n    <Form\r\n      layout=\"inline\"\r\n      onFinish={onSubmit}\r\n      form={form}\r\n      style={{ width: '100%' }}\r\n    >\r\n      <Form.Item\r\n        rules={[\r\n          { required: true, message: 'Need to have a URL to process further!' },\r\n          { type: 'url', message: 'Must be a valid URL!' },\r\n        ]}\r\n        id=\"search-bar\"\r\n        name=\"url\"\r\n        style={{ width: '80%' }}\r\n      >\r\n        <Input placeholder=\"e.g. https://www.youtube.com/watch?v=UxJcdeQ0vPI\" />\r\n      </Form.Item>\r\n      <Form.Item style={{ width: '15%' }}>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          loading={isLoading}\r\n          icon={<RightSquareOutlined />}\r\n        >\r\n          Shorten It\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default URLInput\r\n","import { Result as AntResult, Modal, Button } from 'antd'\r\nimport { SmileOutlined } from '@ant-design/icons'\r\n\r\nfunction Result({ link, modal }) {\r\n  const handleCancel = () => {\r\n    modal.setIsModalVisible(false)\r\n  }\r\n  const goToLink = () => {\r\n    window.open(link.present, '_blank')\r\n  }\r\n  const renderHTML = (\r\n    <Modal footer={null} onCancel={handleCancel} visible={modal.isModalVisible}>\r\n      <AntResult\r\n        title=\"There You Go!\"\r\n        icon={<SmileOutlined />}\r\n        subTitle={`${link.past} has been shortened to: ${link.present}`}\r\n        extra={[\r\n          <Button type=\"primary\" key=\"on-the-go\" onClick={goToLink}>\r\n            Go to Link\r\n          </Button>,\r\n        ]}\r\n      />\r\n    </Modal>\r\n  )\r\n  return link ? renderHTML : null\r\n}\r\n\r\nexport default Result\r\n","import axios from 'axios'\r\n\r\nexport const fetchLink = async function (url) {\r\n  const homepage = 'https://sh.caretsys.tech/get-url'\r\n  const {\r\n    data: { short_url },\r\n  } = await axios.get(homepage, { params: { url } })\r\n  return short_url\r\n}\r\n","import { useState } from 'react'\nimport { Alert } from 'antd'\nimport URLInput from './components/URLInput'\nimport Result from './components/Result'\nimport 'antd/dist/antd.less'\nimport './styles/app.css'\n\nimport { fetchLink } from './helpers/fetchFiles'\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false)\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [link, setLink] = useState({})\n  const onSubmit = async ({ url }) => {\n    setIsLoading(true)\n    const response = await fetchLink(url)\n    setLink({ ...link, past: url, present: response })\n    setIsLoading(false)\n    setIsModalVisible(true)\n  }\n  return (\n    <div className=\"App\">\n      <Alert\n        banner\n        message=\"छोटो-Link: A Caret Systems Product!\"\n        type=\"info\"\n        showIcon\n      />\n      <URLInput onSubmit={onSubmit} isLoading={isLoading} />\n      <Result link={link} modal={{ isModalVisible, setIsModalVisible }} />\n      <p></p>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}